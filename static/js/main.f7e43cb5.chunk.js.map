{"version":3,"sources":["Components/Summary/Summary.js","assets/svg-loaders/bars.svg","Components/Dropzone/Dropzone.js","Components/Dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Summary","_Component","_inherits","_super","_createSuper","props","_classCallCheck","call","_createClass","key","value","size","kbs","Math","floor","mbs","toString","toFixed","fileData","this","fileObj","React","createElement","className","extension","fileCount","style","backgroundColor","concat","color","width","height","textAlign","marginTop","borderRadius","padding","margin","total","loc","fileSize","Component","array1","allExts","scanFiles","item","push","isDirectory","createReader","readEntries","entries","forEach","entry","getFile","_x","_getFile","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","fileEntry","wrap","_context2","prev","next","Promise","resolve","reject","file","abrupt","sent","t0","console","log","stop","lineCount","text","nLines","i","length","Dropzone","_this","state","hightlight","capturedFiles","extMap","root","totalFiles","totalLinesOfCode","locMap","fileInputRef","createRef","onDragOver","bind","_assertThisInitialized","onDragLeave","onDrop","evt","preventDefault","disabled","setState","event","_this2","items","dataTransfer","$","fadeOut","fadeIn","onFilesAdded","webkitGetAsEntry","array2","setTimeout","fileExtsMap","Map","name","_ref","_callee","each","path","sp","nonDir","ext","rd","blob","_context","isFile","webkitRelativePath","fullPath","split","indexOf","FileReader","onload","e","lines","target","result","has","ct","get","set","readAsText","_x2","window","location","reload","PieChart","_this3","summary","chartData","undefined","mapData","labels","data","map","x","replace","random","datasets","sort","a","b","Pie","options","responsive","content","alert","cursor","ref","type","directory","webkitdirectory","mozdirectory","onChange","onClick","goToHome","src","bars","Dashboard","href","App","Router","Switch","Route","exact","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7e43cb5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Summary.scss\";\n\nclass Summary extends Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    fileSize(size) {\n        let kbs = Math.floor(size/1000), mbs = Math.floor(size/1000000);\n        if(mbs > 0) return (mbs.toString() + \"KB\");\n        else if(kbs > 0) return (kbs.toString() + \"KB\");\n        else return (kbs.toFixed(2).toString() + \"KB\");\n    }\n    \n    render() {\n        const fileData = this.props.fileObj;\n        return (\n            <div className=\"Summary col-md-5 col-xs-12\">\n                <div className=\"row top\">\n                    <div className=\"col-md-9\">\n                        <strong><h1 className=\"lang\">{fileData.extension} (&nbsp;<span className=\"each-total-files\">{fileData.fileCount}</span>&nbsp;)</h1></strong>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div style={{ backgroundColor: `${fileData.color}`, width: '16px', height: '16px', textAlign: 'right', marginTop: '1.1vw', borderRadius: '50%' }}></div>\n                    </div>\n                </div>\n                <div className=\"row middle\">\n                    <div className=\"col-md-12\" style={{ padding: '0', margin: '0' }}>\n                        <strong><h1 className=\"percent\">Percentage  - &nbsp;<span className=\"file-percent\">{((fileData.fileCount*100)/(this.props.total)).toFixed(1)}</span>&nbsp;%</h1></strong>\n                    </div>\n                </div>\n                <div className=\"row bottom\">\n                    <div className=\"col-md-6\" style={{ padding: '0', margin: '0' }}>\n                        <strong><h1 className=\"percent\">LOC  - &nbsp;<span className=\"file-percent\">{fileData.loc}</span>&nbsp;</h1></strong>\n                    </div>\n                    <div className=\"col-md-6\" style={{ padding: '0', margin: '0' }}>\n                        <strong><h1 className=\"percent\">SIZE  - &nbsp;<span className=\"file-percent\">{this.fileSize(fileData.size)}</span>&nbsp;</h1></strong>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Summary;\n","export default __webpack_public_path__ + \"static/media/bars.3eac7fa1.svg\";","import React, { Component } from 'react'\nimport $ from 'jquery';\nimport Summary from '../Summary/Summary';\nimport './Dropzone.scss';\nimport { Pie } from 'react-chartjs-2';\nimport bars from '../../assets/svg-loaders/bars.svg';\nlet array1 = [];\nlet allExts = ['js', 'coffee', 'ts', 'jsx', 'py', 'sql', 'db', 'cpp', 'c', 'go', 'scss', 'sass', 'css', 'html',\n             'java', 'bash', 'sh', 'less'];\n\nfunction scanFiles(item) {\n    array1.push(item);\n    if (item.isDirectory) {\n        let directoryReader = item.createReader();\n        directoryReader.readEntries(function(entries) {\n            entries.forEach(function(entry) {\n                scanFiles(entry);\n            });\n        });\n    }\n}\n\nasync function getFile(fileEntry) {\n    try {\n        return await new Promise((resolve, reject) => fileEntry.file(resolve, reject));\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction lineCount( text ) {\n    var nLines = 0;\n    for( var i = 0;  i < text.length;  ++i ) {\n        if( text[i] === '\\n' ) {\n            ++nLines;\n        }\n    }\n    return nLines;\n}\n\nfunction numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nclass Dropzone extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hightlight: false,\n            capturedFiles: [],\n            extMap: null,\n            root: \"<Your awesome project...>\",\n            totalFiles: \"counting lines of code... \",\n            totalLinesOfCode: \"counting lines of code... \",\n            locMap: null\n        };\n        this.fileInputRef = React.createRef();\n        this.onDragOver = this.onDragOver.bind(this);\n        this.onDragLeave = this.onDragLeave.bind(this);\n        this.onDrop = this.onDrop.bind(this);\n    }\n    \n    onDragOver(evt) {\n        evt.preventDefault();\n        \n        if (this.props.disabled) return;\n        \n        this.setState({ hightlight: true });\n    }\n    \n    onDragLeave() {\n        this.setState({ hightlight: false });\n    }\n    \n    onDrop(event) {\n        event.preventDefault();\n        if (this.props.disabled) return;\n        \n        const items = event.dataTransfer.items;\n        $(\".Dropzone, .alert, .outer-title-box\").fadeOut(500);\n        $(\".loader\").fadeIn(1000);\n        if (this.props.onFilesAdded) {\n            for (let i=0; i<items.length; i++) {\n                let item = items[i].webkitGetAsEntry();\n        \n                if (item) {\n                    scanFiles(item, []);\n                }\n            }\n            let array2 = [];\n            setTimeout(() => {\n                let fileExtsMap = new Map();\n                this.setState({ root: array1[0].name, totalFiles: array1.length });\n                setTimeout(() => {\n                    this.setState({ totalFiles: \"re-calculating file count ...\" });\n                }, 2000);\n                array1.forEach(async (each) => {\n                    if(each.isFile === true) {\n                        const path = each.webkitRelativePath || each.fullPath;\n                        const sp = path.split(\".\");\n                        const nonDir = path.split(\"/\");\n                        const ext = sp[sp.length - 1];\n                        if((nonDir.indexOf(\"node_modules\") === -1) &&\n                            (nonDir.indexOf(\"env\") === -1)  &&\n                            (nonDir.indexOf(\"venv\") === -1) &&\n                            (allExts.indexOf(ext) !== -1)) {\n                            let rd = new FileReader(), blob = await getFile(each);\n                            rd.onload = function (e) {\n                                let res = e.target.result;\n                                let lines = lineCount(res);\n                                let size = blob.size; console.log(size, path);\n                                if (fileExtsMap.has(ext)) {\n                                    let ct = fileExtsMap.get(ext);\n                                    ct.fileCount += 1;\n                                    ct.loc += lines;\n                                    ct.size += size;\n                                    fileExtsMap.set(ext, ct);\n                                } else {\n                                    fileExtsMap.set(ext, {'fileCount': 1, 'loc': lines, 'size': size });\n                                }\n                                \n                                array2.push(each);\n                            }\n                            rd.readAsText(blob);\n                        }\n                    }\n                });\n                setTimeout(() => {\n                    this.setState({ totalFiles: \"removing non-code file types 🤔\" });\n                }, 3000);\n                setTimeout(() => {\n                    this.setState({ extMap: fileExtsMap, totalFiles: array2.length });\n                }, 4000);\n                $(\".row\").fadeIn(4500);\n            }, 4500);\n            setTimeout(() => {\n                this.setState({capturedFiles: array2 });\n            }, 5500);\n        }\n        this.setState({ hightlight: false });\n    }\n    \n    goToHome() {\n        window.location.reload();\n    }\n    \n    render() {\n        let summary = \"\", chartData = null, PieChart;\n        this.state.totalLinesOfCode = 0;\n        if(this.state.capturedFiles !== undefined && this.state.extMap !== null) {\n            let mapData = [], labels = [], data = [], backgroundColor = [];\n            console.log(this.state.extMap)\n            this.state.extMap.forEach((value, key, map) => {\n                let fileObj = {\n                    'extension': key,\n                    'loc': numberWithCommas(value.loc),\n                    'size': value.size,\n                    'fileCount': value.fileCount,\n                    'color': `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 0.5)`\n                };\n                this.state.totalLinesOfCode = this.state.totalLinesOfCode + value.loc;\n                console.log(fileObj)\n                labels.push(key); data.push(value.fileCount); backgroundColor.push(fileObj.color);\n                mapData.push(fileObj);\n            });\n            chartData = {\n                labels,\n                datasets: [\n                    {\n                        data,\n                        backgroundColor,\n                    }\n                ]\n            }\n            mapData.sort((a, b) => b.fileCount - a.fileCount);\n            summary =  mapData.map((each, key) => {\n                return <Summary key={key} fileObj={each} total={this.state.totalFiles}/>\n            })\n        }\n        $(\".summary-content\").fadeIn(5500);\n        $(\".loader\").fadeOut(8500);\n        if(chartData !== null)\n            PieChart = <div className=\"chart\"><Pie data={chartData} options={{ responsive: true }} width={270} height={270} /></div>\n   \n        const content = !this.state.hightlight ? \"+\" : \"🙌\";\n        const alert = this.state.hightlight ?\n                    <div className=\"alert\">⚠️ &nbsp; Dropping in the wrong h<span className=\"special\">o</span>le fella 😛</div> :\n                    <div className=\"alert\">Drag in your project folder to analy.se 😉</div>;\n        return (\n            <div className=\"Dropzone-main\">\n                <div className={`Dropzone ${this.state.hightlight ? \"Highlight\" : \"\"}`}\n                     onDragOver={this.onDragOver}\n                     onDragLeave={this.onDragLeave}\n                     onDrop={this.onDrop}\n                     style={{ cursor: this.props.disabled ? \"default\" : \"pointer\" }}>\n                    <span>{content}</span>\n                    <input\n                        ref={this.fileInputRef}\n                        className=\"FileInput\"\n                        type=\"file\"\n                        directory=\"true\"\n                        webkitdirectory=\"true\"\n                        mozdirectory=\"true\"\n                        onChange={this.onFilesAdded}\n                    />\n                </div>\n                <div className=\"summary-content container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-10 l\">\n                            <h1 className=\"root-title\">{this.state.root} (<span className=\"total-files\">{this.state.totalLinesOfCode}</span>)</h1>\n                        </div>\n                        <div className=\"col-md-2 r\">\n                            <i className=\"fas fa-arrow-right\" onClick={() => this.goToHome()}></i>\n                        </div>\n                    </div>\n                    <br />\n                    <h3 className=\"sub-heading\">Languages</h3>\n                    <div className=\"row cont\">\n                        <div className=\"col-md-6 col-xs-12\">\n                            {summary}\n                        </div>\n                        <div className=\"col-md-5 col-xs-12\">\n                            {PieChart}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"loader\">\n                    <img src={bars} width=\"50\" height=\"50\" /> <br />  <br />\n                    Crunching within your project files 🤓\n                </div>\n                {alert}\n            </div>\n        );\n    }\n}\n\nexport default Dropzone;\n","import React, { Component } from \"react\";\nimport Dropzone from '../Dropzone/Dropzone';\nimport \"./Dashboard.scss\";\n\nclass Dashboard extends Component {\n    render() {\n        return (\n            <div className=\"Dashboard\">\n                <div className=\"outer-title-box\">\n                    <h1 className=\"title\">analy<span className=\"dot\">.</span>se</h1>\n                    {/*<div className=\"dash\"></div>*/}\n                </div>\n                <section className=\"main-content\">\n                    <div className=\"outer-card\">\n                        <Dropzone onFilesAdded={console.log} />\n                    </div>\n                </section>\n                Source code here: <a href={\"https://github.com/JesseGuerrero/Lines-Of-Code-ReactJS\"}>My fork</a> & <a href={\"https://github.com/CodHeK/analy.se\"}>original</a>\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Link,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport Dashboard from './Components/Dashboard/Dashboard';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact=\"true\" component={Dashboard} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}